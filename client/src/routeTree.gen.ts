/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as LayoutLayoutaImport } from './routes/layout/layouta'
import { Route as AuthenticatedLayoutImport } from './routes/_authenticated/_layout'
import { Route as AuthenticatedLayoutSettingsImport } from './routes/_authenticated/_layout.settings'
import { Route as AuthenticatedLayoutProfileImport } from './routes/_authenticated/_layout.profile'
import { Route as AuthenticatedLayoutPaymentImport } from './routes/_authenticated/_layout.payment'
import { Route as AuthenticatedLayoutDashboardImport } from './routes/_authenticated/_layout.dashboard'
import { Route as AuthenticatedLayoutCalendarImport } from './routes/_authenticated/_layout.calendar'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const AuthSuccessLazyImport = createFileRoute('/auth/success')()
const AuthSettingsLazyImport = createFileRoute('/auth/settings')()
const AuthLoginLazyImport = createFileRoute('/auth/login')()

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthSuccessLazyRoute = AuthSuccessLazyImport.update({
  path: '/auth/success',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/success.lazy').then((d) => d.Route))

const AuthSettingsLazyRoute = AuthSettingsLazyImport.update({
  path: '/auth/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/settings.lazy').then((d) => d.Route))

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))

const LayoutLayoutaRoute = LayoutLayoutaImport.update({
  path: '/layout/layouta',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedLayoutRoute = AuthenticatedLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedLayoutSettingsRoute =
  AuthenticatedLayoutSettingsImport.update({
    path: '/settings',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)

const AuthenticatedLayoutProfileRoute = AuthenticatedLayoutProfileImport.update(
  {
    path: '/profile',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any,
)

const AuthenticatedLayoutPaymentRoute = AuthenticatedLayoutPaymentImport.update(
  {
    path: '/payment',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any,
)

const AuthenticatedLayoutDashboardRoute =
  AuthenticatedLayoutDashboardImport.update({
    path: '/dashboard',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)

const AuthenticatedLayoutCalendarRoute =
  AuthenticatedLayoutCalendarImport.update({
    path: '/calendar',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_layout': {
      preLoaderRoute: typeof AuthenticatedLayoutImport
      parentRoute: typeof AuthenticatedImport
    }
    '/layout/layouta': {
      preLoaderRoute: typeof LayoutLayoutaImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/settings': {
      preLoaderRoute: typeof AuthSettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/success': {
      preLoaderRoute: typeof AuthSuccessLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_layout/calendar': {
      preLoaderRoute: typeof AuthenticatedLayoutCalendarImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    '/_authenticated/_layout/dashboard': {
      preLoaderRoute: typeof AuthenticatedLayoutDashboardImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    '/_authenticated/_layout/payment': {
      preLoaderRoute: typeof AuthenticatedLayoutPaymentImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    '/_authenticated/_layout/profile': {
      preLoaderRoute: typeof AuthenticatedLayoutProfileImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    '/_authenticated/_layout/settings': {
      preLoaderRoute: typeof AuthenticatedLayoutSettingsImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AuthenticatedRoute.addChildren([
    AuthenticatedLayoutRoute.addChildren([
      AuthenticatedLayoutCalendarRoute,
      AuthenticatedLayoutDashboardRoute,
      AuthenticatedLayoutPaymentRoute,
      AuthenticatedLayoutProfileRoute,
      AuthenticatedLayoutSettingsRoute,
    ]),
  ]),
  LayoutLayoutaRoute,
  AuthLoginLazyRoute,
  AuthSettingsLazyRoute,
  AuthSuccessLazyRoute,
])

/* prettier-ignore-end */
